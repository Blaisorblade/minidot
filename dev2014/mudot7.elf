%{ ------- arithmetic ----- }%

nat: type.
z: nat.
s: nat -> nat.

add : nat -> nat -> nat -> type.
add/z : add z N N.
add/s : add (s N1) N2 (s N3)
   <- add N1 N2 N3.

%mode add +N1 +N2 -N3.

lte : nat -> nat -> type.
lte/z : lte z N.
lte/s : lte (s N1) (s N2)
   <- lte N1 N2.

%mode lte +N1 +N2.


eq : nat -> nat -> type.
eq/z : eq z z.
eq/s : eq (s N1) (s N2)
   <- eq N1 N2.

% %mode eq +N1 +N2.


ne : nat -> nat -> type.
ne/z1 : ne z (s N).
ne/z2 : ne (s N) z.
ne/s : ne (s N1) (s N2)
   <- ne N1 N2.

%mode ne +N1 +N2.

eq-refl: {N:nat} eq N N -> type.
%mode eq-refl +N -E1.

- : eq-refl z eq/z.
- : eq-refl (s N) (eq/s E) <- eq-refl N E.

%worlds () (eq-refl _ _).
%total {A} (eq-refl A _).


sub-eq: eq A1 A2 -> eq C1 C2 -> add A1 B1 C1 -> add A2 B2 C2 -> eq B1 B2 -> type.
%mode sub-eq +E1 +E2 +A1 +A2 -E3.

- : sub-eq eq/z E add/z add/z E.
- : sub-eq (eq/s E1) (eq/s E2) (add/s A1) (add/s A2) E3
  <- sub-eq E1 E2 A1 A2 E3.

%worlds () (sub-eq _ _ _ _ _).
%total {A} (sub-eq A _ _ _ _).

add-inc: add A B C -> add A (s B) (s C) -> type.
%mode add-inc +E1 -E2.

- : add-inc add/z add/z.
- : add-inc (add/s A1) (add/s A2)
  <- add-inc A1 A2.

%worlds () (add-inc _ _).
%total {A} (add-inc A _).



%{ ------- language ----- }%

% sorts
exp: type.

tpe: type.
val: type.

tenv: type.

% members

dec: type.
rect: tpe -> tpe -> dec.

% types

top  : tpe.
arrow: tpe -> tpe -> tpe.  % A => B
tsel : tpe.                % x.T
bind : dec -> tpe.         % { x => T: L..U }


tcons : dec -> tenv.
tnil : tenv.

stp: tenv -> tpe -> tenv -> tpe -> type. % G1 < G2 |- T1 < T2

spt: tenv -> tpe -> tenv -> tpe -> type. % G1 < G2 |- T1 > T2

sdc: tenv -> dec -> tenv -> dec -> type. % G1 < G2 |- L1..U1 < L2..U2


sdc/rect: sdc tnil (rect L1 U1) tnil (rect L2 U2) 
          <- spt tnil L1 tnil L2
          <- stp tnil U1 tnil U2
          <- stp tnil L1 tnil U1
          <- stp tnil L2 tnil U2
          .

sdc/rectc: sdc (tcons D1) (rect L1 U1) (tcons D2) (rect L2 U2) 
          <- spt (tcons D1) L1 (tcons D2) L2
          <- stp (tcons D1) U1 (tcons D2) U2
          % <- stp (tcons D1) L1 (tcons D2) U1  %% trans issue?
          % <- stp (tcons D1) L2 (tcons D2) U2  %% trans issue?
          .



stp/top: stp tnil T tnil top.
stp/topc: stp (tcons D1) T (tcons D2) top.

spt/top: spt tnil top tnil T.
spt/topc: spt (tcons D1) top (tcons D2) T.


stp/fun: stp tnil (arrow A1 B1) tnil (arrow A2 B2) 
          <- spt tnil A1 tnil A2
          <- stp tnil B1 tnil B2 
          .

stp/func: stp (tcons D1) (arrow A1 B1) (tcons D2) (arrow A2 B2) 
          <- spt (tcons D1) A1 (tcons D2) A2
          <- stp (tcons D1) B1 (tcons D2) B2 
          .

spt/fun: spt tnil (arrow A1 B1) tnil (arrow A2 B2) 
          <- stp tnil A1 tnil A2
          <- spt tnil B1 tnil B2 
          .

spt/func: spt (tcons D1) (arrow A1 B1) (tcons D2) (arrow A2 B2) 
          <- stp (tcons D1) A1 (tcons D2) A2
          <- spt (tcons D1) B1 (tcons D2) B2 
          .


stp/sel1: stp (tcons (rect L1 U1)) tsel (tcons (rect L2 U2)) T2 
          <- stp (tcons (rect L1 U1)) U1 (tcons (rect L2 U2)) T2
          .

spt/sel1: spt (tcons (rect L1 U1)) tsel (tcons (rect L2 U2)) T2 
          <- spt (tcons (rect L1 U1)) L1 (tcons (rect L2 U2)) T2
          .


stp/sel2: stp (tcons (rect L1 U1)) T1 (tcons (rect L2 U2)) tsel
          % <- sdc (tcons (rect L1 U1)) (rect L1 U1) (tcons (rect L2 U2)) (rect L2 U2)
          <- stp (tcons (rect L1 U1)) T1 (tcons (rect L2 U2)) U2
          % we want to express this:
          % <- stp (tcons (rect L1 U1)) T1 (tcons (rect L1 U1)) L1 
          % but we split it into two cases so that we can apply
          % transitivity on independent proper subterms, instead 
          % of twice in a chain T0 < T1 < L1 < L0.
          <- stp (tcons (rect L1 U1)) T1 (tcons (rect LX UX)) LX
          <- spt (tcons (rect L1 U1)) L1 (tcons (rect LX UX)) LX
          .

spt/sel2: spt (tcons (rect L1 U1)) T1 (tcons (rect L2 U2)) tsel
          <- spt (tcons (rect L1 U1)) T1 (tcons (rect L2 U2)) L2
          % <- spt (tcons (rect L1 U1)) T1 (tcons (rect L1 U1)) U1
          <- spt (tcons (rect L1 U1)) T1 (tcons (rect LX UX)) UX
          <- stp (tcons (rect L1 U1)) U1 (tcons (rect LX UX)) UX
          .


stp/selx: stp (tcons (rect L1 U1)) tsel (tcons (rect L2 U2)) tsel
          <- stp (tcons (rect L1 U1)) U1 (tcons (rect L2 U2)) U2
          .

spt/selx: spt (tcons (rect L1 U1)) tsel (tcons (rect L2 U2)) tsel
          <- spt (tcons (rect L1 U1)) L1 (tcons (rect L2 U2)) L2
          .


stp/bind: stp tnil (bind D1) tnil (bind D2)
          <- sdc (tcons D1) D1 (tcons D2) D2
          .

spt/bind: spt tnil (bind D1) tnil (bind D2)
          <- sdc (tcons D2) D2 (tcons D1) D1
          .



%% shotgun lemmas for case tsel2-any -- provable?

stp-xlow: stp (tcons (rect L1 U1)) T1 (tcons (rect L2 U2)) T2 ->
          spt (tcons (rect L1 U1)) L1 (tcons (rect L2 U2)) L2 ->
          type.
%mode stp-xlow +SBT2 -SBT3.
%worlds () (stp-xlow _ _).
%trustme
%total N (stp-xlow N _).
%reduces N3 < N2 (stp-xlow N2 N3).

spt-xlow: spt (tcons (rect L1 U1)) T1 (tcons (rect L2 U2)) T2 ->
          stp (tcons (rect L1 U1)) U1 (tcons (rect L2 U2)) U2 ->
          type.
%mode spt-xlow +SBT2 -SBT3.
%worlds () (spt-xlow _ _).
%trustme
%total N (spt-xlow N _).
%reduces N3 < N2 (spt-xlow N2 N3).





%% combined trans + weakening lemma

stp-trans-weaken: stp G1 T1 G2 T2 -> stp G2 T2 G3 T3 -> stp G1 T1 G3 T3 -> type.
%mode stp-trans-weaken +SBT1 +SBT2 -SBT3.

spt-trans-weaken: spt G1 T1 G2 T2 -> spt G2 T2 G3 T3 -> spt G1 T1 G3 T3 -> type.
%mode spt-trans-weaken +SBT1 +SBT2 -SBT3.

sdc-trans-weaken: sdc G1 D1 G2 D2 -> sdc G2 D2 G3 D3 -> sdc G1 D1 G3 D3 -> type.
%mode sdc-trans-weaken +SBT1 +SBT2 -SBT3.

stp-trans-weaken2: stp G1 T1 G2 T2 -> stp G2 T2 G3 T3 -> stp G1 T1 G3 T3 -> type.
%mode stp-trans-weaken2 +SBT1 +SBT2 -SBT3.

spt-trans-weaken2: spt G1 T1 G2 T2 -> spt G2 T2 G3 T3 -> spt G1 T1 G3 T3 -> type.
%mode spt-trans-weaken2 +SBT1 +SBT2 -SBT3.

sdc-trans-weaken2: sdc G1 D1 G2 D2 -> sdc G2 D2 G3 D3 -> sdc G1 D1 G3 D3 -> type.
%mode sdc-trans-weaken2 +SBT1 +SBT2 -SBT3.


-/rect : sdc-trans-weaken
            (sdc/rect L2U2 L1U1 U1U2 L1L2)
            (sdc/rect L3U3 L2U2' U2U3 L2L3)
            (sdc/rect L3U3 L1U1 U1U3 L1L3)
            <- stp-trans-weaken U1U2 U2U3 U1U3
            <- spt-trans-weaken L1L2 L2L3 L1L3
            .

-/rectc : sdc-trans-weaken
            (sdc/rectc U1U2 L1L2)
            (sdc/rectc U2U3 L2L3)
            (sdc/rectc U1U3 L1L3)
            <- stp-trans-weaken U1U2 U2U3 U1U3
            <- spt-trans-weaken L1L2 L2L3 L1L3
            % widen L1U1 to L1U1'
            % widen L3U3 to L3U3'
            .


-/top : stp-trans-weaken S1 stp/top stp/top.
-/topc : stp-trans-weaken S1 stp/topc stp/topc.

-/top2 : spt-trans-weaken spt/top S1 spt/top.
-/topc2 : spt-trans-weaken spt/topc S1 spt/topc.


-/fun-fun  : stp-trans-weaken
            (stp/fun SBT2 SBT1)
            (stp/fun SBT4 SBT3)
            (stp/fun SBT6 SBT5)
            <- spt-trans-weaken SBT1 SBT3 SBT5 
            <- stp-trans-weaken SBT2 SBT4 SBT6
            .

-/fun-fun--X2  : spt-trans-weaken
            (spt/fun SBT2 SBT1)
            (spt/fun SBT4 SBT3)
            (spt/fun SBT6 SBT5)
            <- stp-trans-weaken SBT1 SBT3 SBT5
            <- spt-trans-weaken SBT2 SBT4 SBT6
            .

-/func-func  : stp-trans-weaken
            (stp/func SBT2 SBT1)
            (stp/func SBT4 SBT3)
            (stp/func SBT6 SBT5)
            <- spt-trans-weaken SBT1 SBT3 SBT5
            <- stp-trans-weaken SBT2 SBT4 SBT6
            .
-/func-func--X2  : spt-trans-weaken
            (spt/func SBT2 SBT1)
            (spt/func SBT4 SBT3)
            (spt/func SBT6 SBT5)
            <- stp-trans-weaken SBT1 SBT3 SBT5
            <- spt-trans-weaken SBT2 SBT4 SBT6
            .

-/tsel1 :   stp-trans-weaken
            (stp/sel1 ST_U1)
            SBT2
            (stp/sel1 ST_U1')
            <- stp-trans-weaken ST_U1 SBT2 ST_U1'
            .

-/tsel1--X2 : spt-trans-weaken
            (spt/sel1 ST_U1)
            SBT2
            (spt/sel1 ST_U1')
            <- spt-trans-weaken ST_U1 SBT2 ST_U1'
            .

-/tsel2 :   stp-trans-weaken
            SBT1
            (stp/sel2 ST_LX ST_1L ST_2U)
            (stp/sel2 ST_LX' ST_1L' ST_2U')
            <- stp-trans-weaken SBT1 ST_1L ST_1L'
            <- stp-trans-weaken SBT1 ST_2U ST_2U'
            <- stp-xlow SBT1 ST_L1L0
            <- spt-trans-weaken ST_L1L0 ST_LX  ST_LX'
            .

-/tsel2--X2 :   spt-trans-weaken
            SBT1
            (spt/sel2 ST_LX ST_1L ST_2U)
            (spt/sel2 ST_LX' ST_1L' ST_2U')
            <- spt-trans-weaken SBT1 ST_1L ST_1L'
            <- spt-trans-weaken SBT1 ST_2U ST_2U'
            <- spt-xlow SBT1 ST_L1L0
            <- stp-trans-weaken ST_L1L0 ST_LX  ST_LX'
            .


-/tsel2-tsel1 : stp-trans-weaken
            (stp/sel2 ST_LX ST_1L ST_1U)
            (stp/sel1 ST_U2)
            OUT
            <- stp-trans-weaken ST_1U ST_U2 OUT
            .

-/tsel2-tsel1--X2 : spt-trans-weaken
            (spt/sel2 ST_LX ST_1L ST_1U)
            (spt/sel1 ST_U2)
            OUT
            <- spt-trans-weaken ST_1U ST_U2 OUT
            .



-/tsel1-tselx : stp-trans-weaken
            ((stp/selx ST0): stp (tcons (rect L1 U1)) tsel (tcons (rect L2 U2)) tsel)
            (stp/sel1 ST_U1)
            (stp/sel1 ST_U1')
            <- stp-trans-weaken ST0 ST_U1 ST_U1'
            .

-/tsel1-tselx--X2 : spt-trans-weaken
            (spt/selx (ST0:   spt (tcons (rect L1 U1)) L1 (tcons (rect L2 U2)) L2))
            (spt/sel1 (ST_L3: spt (tcons (rect L2 U2)) L2 (tcons (rect L3 U3)) T3))
            (spt/sel1 ST_L3')
            <- spt-trans-weaken ST0 ST_L3 ST_L3'
            .


-/tsel2-tselx : stp-trans-weaken
            (stp/sel2 ST_LX ST_1L ST_U1)
            ((stp/selx ST0): stp (tcons (rect L1 U1)) tsel (tcons (rect L2 U2)) tsel)
            (stp/sel2 ST_LX ST_1L ST_U1')
            <- stp-trans-weaken ST_U1 ST0 ST_U1'
            .

-/tsel2-tselx--X2 : spt-trans-weaken
            (spt/sel2 ST_LX ST_1L ST_U1)
            (spt/selx (ST0: spt (tcons (rect L2 U2)) L2 (tcons (rect L3 U3)) L3))
            (spt/sel2 ST_LX ST_1L ST_U1')
            <- spt-trans-weaken ST_U1 ST0 ST_U1'
            .


-/tselx-tselx : stp-trans-weaken
            (stp/selx SBT1)
            (stp/selx SBT2)
            (stp/selx SBT3)
            <- stp-trans-weaken SBT1 SBT2 SBT3
            .

-/tselx-tselx--X2 : spt-trans-weaken
            (spt/selx SBT1)
            (spt/selx SBT2)
            (spt/selx SBT3)
            <- spt-trans-weaken SBT1 SBT2 SBT3
            .

-/tbind-bind : stp-trans-weaken
            (stp/bind S1)
            (stp/bind S2)
            (stp/bind S3)
            <- sdc-trans-weaken S1 S2 S3
            .

-/tbind-bind--X2 : spt-trans-weaken
            (spt/bind S1)
            (spt/bind S2)
            (spt/bind S3)
            % <- scd-trans-weaken S1 S2 S3
            <- sdc-trans-weaken2 S2 S1 S3  %%% swapping sides
            .


%{ ----------- copy'n'paste for termination --------- }%

-/rect : sdc-trans-weaken2
            (sdc/rect L2U2 L1U1 U1U2 L1L2)
            (sdc/rect L3U3 L2U2' U2U3 L2L3)
            (sdc/rect L3U3 L1U1 U1U3 L1L3)
            <- stp-trans-weaken2 U1U2 U2U3 U1U3
            <- spt-trans-weaken2 L1L2 L2L3 L1L3
            .

-/rectc : sdc-trans-weaken2
            (sdc/rectc U1U2 L1L2)
            (sdc/rectc U2U3 L2L3)
            (sdc/rectc U1U3 L1L3)
            <- stp-trans-weaken2 U1U2 U2U3 U1U3
            <- spt-trans-weaken2 L1L2 L2L3 L1L3
            % widen L1U1 to L1U1'
            % widen L3U3 to L3U3'
            .


-/top : stp-trans-weaken2 S1 stp/top stp/top.
-/topc : stp-trans-weaken2 S1 stp/topc stp/topc.

-/top2 : spt-trans-weaken2 spt/top S1 spt/top.
-/topc2 : spt-trans-weaken2 spt/topc S1 spt/topc.


-/fun-fun  : stp-trans-weaken2
            (stp/fun SBT2 SBT1)
            (stp/fun SBT4 SBT3)
            (stp/fun SBT6 SBT5)
            <- spt-trans-weaken2 SBT1 SBT3 SBT5 
            <- stp-trans-weaken2 SBT2 SBT4 SBT6
            .

-/fun-fun--X2  : spt-trans-weaken2
            (spt/fun SBT2 SBT1)
            (spt/fun SBT4 SBT3)
            (spt/fun SBT6 SBT5)
            <- stp-trans-weaken2 SBT1 SBT3 SBT5
            <- spt-trans-weaken2 SBT2 SBT4 SBT6
            .

-/func-func  : stp-trans-weaken2
            (stp/func SBT2 SBT1)
            (stp/func SBT4 SBT3)
            (stp/func SBT6 SBT5)
            <- spt-trans-weaken2 SBT1 SBT3 SBT5
            <- stp-trans-weaken2 SBT2 SBT4 SBT6
            .
-/func-func--X2  : spt-trans-weaken2
            (spt/func SBT2 SBT1)
            (spt/func SBT4 SBT3)
            (spt/func SBT6 SBT5)
            <- stp-trans-weaken2 SBT1 SBT3 SBT5
            <- spt-trans-weaken2 SBT2 SBT4 SBT6
            .

-/tsel1 :   stp-trans-weaken2
            (stp/sel1 ST_U1)
            SBT2
            (stp/sel1 ST_U1')
            <- stp-trans-weaken2 ST_U1 SBT2 ST_U1'
            .

-/tsel1--X2 : spt-trans-weaken2
            (spt/sel1 ST_U1)
            SBT2
            (spt/sel1 ST_U1')
            <- spt-trans-weaken2 ST_U1 SBT2 ST_U1'
            .

-/tsel2 :   stp-trans-weaken2
            SBT1
            (stp/sel2 ST_LX ST_1L ST_2U)
            (stp/sel2 ST_LX' ST_1L' ST_2U')
            <- stp-trans-weaken2 SBT1 ST_1L ST_1L'
            <- stp-trans-weaken2 SBT1 ST_2U ST_2U'
            <- stp-xlow SBT1 ST_L1L0
            <- spt-trans-weaken2 ST_L1L0 ST_LX  ST_LX'
            .

-/tsel2--X2 :   spt-trans-weaken2
            SBT1
            (spt/sel2 ST_LX ST_1L ST_2U)
            (spt/sel2 ST_LX' ST_1L' ST_2U')
            <- spt-trans-weaken2 SBT1 ST_1L ST_1L'
            <- spt-trans-weaken2 SBT1 ST_2U ST_2U'
            <- spt-xlow SBT1 ST_L1L0
            <- stp-trans-weaken2 ST_L1L0 ST_LX  ST_LX'
            .


-/tsel2-tsel1 : stp-trans-weaken2
            (stp/sel2 ST_LX ST_1L ST_1U)
            (stp/sel1 ST_U2)
            OUT
            <- stp-trans-weaken2 ST_1U ST_U2 OUT
            .

-/tsel2-tsel1--X2 : spt-trans-weaken2
            (spt/sel2 ST_LX ST_1L ST_1U)
            (spt/sel1 ST_U2)
            OUT
            <- spt-trans-weaken2 ST_1U ST_U2 OUT
            .



-/tsel1-tselx : stp-trans-weaken2
            ((stp/selx ST0): stp (tcons (rect L1 U1)) tsel (tcons (rect L2 U2)) tsel)
            (stp/sel1 ST_U1)
            (stp/sel1 ST_U1')
            <- stp-trans-weaken2 ST0 ST_U1 ST_U1'
            .

-/tsel1-tselx--X2 : spt-trans-weaken2
            (spt/selx (ST0:   spt (tcons (rect L1 U1)) L1 (tcons (rect L2 U2)) L2))
            (spt/sel1 (ST_L3: spt (tcons (rect L2 U2)) L2 (tcons (rect L3 U3)) T3))
            (spt/sel1 ST_L3')
            <- spt-trans-weaken2 ST0 ST_L3 ST_L3'
            .


-/tsel2-tselx : stp-trans-weaken2
            (stp/sel2 ST_LX ST_1L ST_U1)
            ((stp/selx ST0): stp (tcons (rect L1 U1)) tsel (tcons (rect L2 U2)) tsel)
            (stp/sel2 ST_LX ST_1L ST_U1')
            <- stp-trans-weaken2 ST_U1 ST0 ST_U1'
            .

-/tsel2-tselx--X2 : spt-trans-weaken2
            (spt/sel2 ST_LX ST_1L ST_U1)
            (spt/selx (ST0: spt (tcons (rect L2 U2)) L2 (tcons (rect L3 U3)) L3))
            (spt/sel2 ST_LX ST_1L ST_U1')
            <- spt-trans-weaken2 ST_U1 ST0 ST_U1'
            .


-/tselx-tselx : stp-trans-weaken2
            (stp/selx SBT1)
            (stp/selx SBT2)
            (stp/selx SBT3)
            <- stp-trans-weaken2 SBT1 SBT2 SBT3
            .

-/tselx-tselx--X2 : spt-trans-weaken2
            (spt/selx SBT1)
            (spt/selx SBT2)
            (spt/selx SBT3)
            <- spt-trans-weaken2 SBT1 SBT2 SBT3
            .

-/tbind-bind : stp-trans-weaken2
            (stp/bind S1)
            (stp/bind S2)
            (stp/bind S3)
            <- sdc-trans-weaken2 S1 S2 S3
            .

-/tbind-bind--X2 : spt-trans-weaken2
            (spt/bind S1)
            (spt/bind S2)
            (spt/bind S3)
            <- sdc-trans-weaken S2 S1 S3  %%% swapping sides
            .


%worlds () 
(stp-trans-weaken _ _ _)(spt-trans-weaken _ _ _)(sdc-trans-weaken _ _ _)
(stp-trans-weaken2 _ _ _)(spt-trans-weaken2 _ _ _)(sdc-trans-weaken2 _ _ _)
.

%covers stp-trans-weaken +A +B -C.

%covers spt-trans-weaken +A +B -C.

%total {(A A' A'' Y Y' Y'')(B B' B'' X X' X'') } 
(stp-trans-weaken A B _ )(spt-trans-weaken A' B' _)(sdc-trans-weaken A'' B'' _)
(stp-trans-weaken2 X Y _ )(spt-trans-weaken2 X' Y' _)(sdc-trans-weaken2 X'' Y'' _)
.
