val r : { r =>
  { type Nat: Bot .. Top } &
  { def succ(n: r.Nat): r.Nat } &
  { val zero: r.Nat }
}
= new ( r =>
  type Nat = Top
  def succ(n: r.Nat): r.Nat = n
  val zero: r.Nat = new ()
)
val z: r.Nat = r.zero
val sz: r.Nat = r.succ(z)
val three: r.Nat = r.succ(r.succ(r.succ(r.zero)))
val no = r.succ(new ())
val nan: Top = new()
val no2 = r.succ(nan)
three
